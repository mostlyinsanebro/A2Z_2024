Problem Link:-
https://www.geeksforgeeks.org/problems/all-divisors-of-a-number/1


Solution:-

Time Complexity:- O(sqrt(n)) + O(number of factors*log(number of factors))

class Solution {
    public static void print_divisors(int n) {
        // code here
        
        ArrayList<Integer> al = new ArrayList<Integer>();
    
        // O(sqrt(n))
        for(int i=1;i*i<=n;i++)
        {
            if(i*i == n)
            {
                al.add(i);
            }
            else if(n%i==0)
            {
                al.add(i);
                al.add(n/i);
            }
        }
        
        // Sorting takes O(nlogn) , therefore TC for the following sorting is O(number of factors*log(number of factors))
        Collections.sort(al);
        
        for(Integer i : al)
        {
            System.out.print(i+" ");
        }
    }
}
