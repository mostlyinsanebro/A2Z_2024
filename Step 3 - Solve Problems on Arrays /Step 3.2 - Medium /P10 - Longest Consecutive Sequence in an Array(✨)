Problem Link:-
https://www.codingninjas.com/studio/problems/longest-successive-elements_6811740?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM


Solution:-

Brute Force:-

Code:-
 public static int longestSuccessiveElements(int []a) {
        // Write your code here.

        // Brute Force
        int max=Integer.MIN_VALUE;
        int cnt=0,x=0;

        for(int i=0;i<a.length;i++)
        {
            x=a[i];
            cnt=0;
            while(ls(a,x))
            {
                cnt+=1;
                x+=1;
            }
            max=Math.max(max,cnt);
        }
        return max;
    }

    public static boolean ls(int a[],int x)
    {
        for(int i=0;i<a.length;i++){
            if(a[i]==x) return true;
        }

        return false;
    }

T.C. -> O(N^2)
S.C. -> O(1)


Better Approach:-
Sort the array and then try to find the longest consecutive sequence.

Code:-
  public static int longestSuccessiveElements(int []arr) {
        // Write your code here.

        int n=arr.length;
        Arrays.sort(arr);

        int ls = Integer.MIN_VALUE;
        int curCnt=0,maxCnt = 0;

        for(int i=0;i<n;i++)
        {
            if(arr[i]==ls+1)
            {
                curCnt+=1;    
            }
            else if(arr[i]!=ls)
            {
                curCnt = 1;
            }
            ls = arr[i];
            maxCnt = Math.max(maxCnt,curCnt);
        }
        return maxCnt;
  }

T.C. -> O(NlogN) + O(N)
S.C. -> O(1)


Optimal Solution:-
