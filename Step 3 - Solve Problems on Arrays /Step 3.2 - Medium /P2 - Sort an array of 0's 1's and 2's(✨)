Problem Link:-
https://www.codingninjas.com/studio/problems/sort-an-array-of-0s-1s-and-2s_892977?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM



Solution:-

Brute Force:-
Sorting an array using any sorting algorithm.

Better Approach:-
Traverse an array from 0->n and get the count of 0's,1's and 2's and then fill the array with that many 0's,1's and 2's from the start.

Code:-
    public static void sortArray(ArrayList<Integer> arr, int n) {
        // Write your code here.
        int cnt0=0;
        int cnt1=0;
        int cnt2=0;

        for(int i=0;i<arr.size();i++)
        {
            if(arr.get(i)==0)
                cnt0++;
            else if(arr.get(i)==1)
                cnt1++;
            else
               cnt2++;
        }

        int i=0;
        for(i=0;i<cnt0;i++)
        {
            arr.add(i,0);
        }
        for(i=cnt0;i<cnt0+cnt1;i++)
        {
           arr.add(i,1);  
        }
        for(i=cnt0+cnt1;i<n;i++)
        {
            arr.add(i,2);
        }    
    }

T.C. -> O(2N) ~ O(N)
S.C  -> O(1)

Optimal Approach :-
Dutch National Flag Algorithm


