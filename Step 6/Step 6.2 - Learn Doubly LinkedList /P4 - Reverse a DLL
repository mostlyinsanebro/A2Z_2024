Problem Link:-
https://www.naukri.com/code360/problems/reverse-a-doubly-linked-list_1116098?leftPanelTabValue=PROBLEM
https://www.geeksforgeeks.org/problems/reverse-a-doubly-linked-list/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=reverse-a-doubly-linked-list


Iterative Solution:- 
class Solution {
    public DLLNode reverseDLL(DLLNode head) {
        // Your code here
        if(head==null) return null;
        
        DLLNode last = null;
        DLLNode curr=head;
        DLLNode ahead = head.next;
        
        while(ahead!=null)
        {
            curr.next = last;
            curr.prev = ahead;
            last = curr;
            curr = ahead;
            ahead = ahead.next;
        }
        
        curr.next = last;
        curr.prev = ahead;
        return curr;
    }
}

T.C. -> O(N)
S.C. -> O(1)

Recursive Solution:-
class Solution {
    public DLLNode reverseDLL(DLLNode head) {
        // Your code here
        
        if(head.next==null)
        {
            head.next=head.prev;
            head.prev=null;
            return head;
        }
        
        DLLNode newHead = reverseDLL(head.next);
        
        DLLNode ahead = head.next;
        head.next=head.prev;
        head.prev = ahead;
        return newHead;
    }
}


T.C. -> O(N)
S.C. -> O(N) ~ for stack.

Note:- This may fail in case of large test cases as the stack sapce will be large..for recursive solution.
OIterative solution is recommended.
