Problem Link:-
https://leetcode.com/problems/odd-even-linked-list/description/
https://www.naukri.com/code360/problems/segregate-even-and-odd-nodes-in-a-linked-list_1116100?leftPanelTabValue=PROBLEM


Brute Force Method:- Use extra ArrayLists to store the values at even and odd indexes and then traverse the LL and put them there.

Code:-
class Solution {
    public ListNode oddEvenList(ListNode head) {
        ArrayList<Integer> even = new ArrayList<>();
        ArrayList<Integer> odd  = new ArrayList<>();

        int idx=0;
        ListNode temp=head;

        while(temp!=null)
        {
            if(idx%2==0)
            {
                even.add(temp.val);
            }
            else
            {
                odd.add(temp.val);
            }
            idx++;
            temp=temp.next;
        }

        int idx1=0,idx2=0;
        idx=0;
        temp=head;

        while(idx1!=even.size())
        {
            temp.val=even.get(idx1);
            idx1++;
            temp=temp.next;
        }

        while(idx2!=odd.size())
        {
            temp.val=odd.get(idx2);
            idx2++;
            temp=temp.next;
        }
        return head;
    }
}

T.C. -> O(2N)
S.C. -> O(N)


