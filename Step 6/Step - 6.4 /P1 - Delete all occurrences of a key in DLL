Problem Link:-
https://www.geeksforgeeks.org/problems/delete-all-occurrences-of-a-given-key-in-a-doubly-linked-list/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=delete-all-occurrences-of-a-given-key-in-a-doubly-linked-list
https://www.naukri.com/code360/problems/delete-all-occurrences-of-a-given-key-in-a-doubly-linked-list_8160461

Better Solution in terms of Code Structure:-
class Solution {
    static Node deleteAllOccurOfX(Node head, int x) {
        // Write your code here
        Node temp=head;
        Node temp1 = null;
        
        while(temp!=null)
        {
            if(temp.data==x)
            {
                // If temp is at head, we will handle accordingly.
                if(temp==head)
                {
                    head=temp.next;
                    temp.next.prev=null;
                    temp.next=null;
                    temp=head;
                }
                // If temp is at the tail
                else if(temp.next==null)
                {
                    temp.prev.next=null;
                    temp.prev=null;
                    temp=null;
                }
                // It is standing somewhere in between
                else
                {
                    temp1=temp.next;
                    temp.next.prev=temp.prev;
                    temp.prev.next=temp.next;
                    temp.next=null;
                    temp.prev=null;
                    temp=temp1;
                }
            }
            else
                temp=temp.next;
        }
        return head;
    }
}

T.C. -> O(N)
S.C. -> O(1)

My Solution:-
class Solution {
    static Node deleteAllOccurOfX(Node head, int x) {
        // Write your code here
        Node temp = head;
        while(head.data==x&&head.prev==null&&head.next!=null)
        {
            temp=head.next;
            head.next.prev=null;
            head.next =null;
            head=temp;
        }
        
        Node temp1=null;
        
        while(temp!=null)
        {
            if(temp.data==x)
            {
                if(temp.next==null)
                {
                    temp.prev.next=null;
                    temp.prev=null;
                    temp1=null;
                }
                else
                {
                    temp1=temp.next;
                    temp.prev.next = temp.next;
                    temp.next.prev=temp.prev;
                    temp.next=null;
                    temp.prev=null;
                }
                temp=temp1;
            }
            else
            {
                temp=temp.next;
            }
        }
        return head;
    }
}

T.C. -> O(N)
S.C. -> O(1)
