Problem Link:-
https://www.geeksforgeeks.org/problems/prefix-to-postfix-conversion/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=prefix-to-postfix-conversion
https://www.naukri.com/code360/problems/convert-prefix-to-postfix_8391014

Approach:- As we are converting from prefix, thus traverse from the last to first of given string, if an operand is encountered, then push it on top of stack and if an operator is encountered,
the pop the top 2 elements from the stack and do top1+top2+operator and push it on the top of the stack. At the end, the string on the top will be the converted expression from prefix to postfix.

Code:-
class Solution {
    static String preToPost(String str) {
        // code here
        int i=str.length()-1;
        char ch=' ';
        
        Stack<String> st = new Stack<>();
        
        while(i>=0)
        {
            ch=str.charAt(i);
            
            if((ch>='A'&&ch<='Z')||(ch>='a'&&ch<='z')||(ch>='0'&&ch<='9'))
                st.push(Character.toString(ch));
            else
            {
                String top1 = st.pop();
                String top2=st.pop();
                String ans = top1+top2+ch;
                st.push(ans);
            }
            i--;
        }
        return st.pop();
        
    }
}

T.C. -> O(N) O(N)
S.C. -> O(N)
