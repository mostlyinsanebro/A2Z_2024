Problem Link:-
https://www.codingninjas.com/studio/problems/occurrence-of-x-in-a-sorted-array_630456?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf


Solution:-
Brute Force:- Use linear search to find the first and last occurence of array and then substract first from lat to get the occurences
of an element.


Optimal Solution:- Use Binary Search for getting first occurence and last occurence and then substract them.

Code:-
 public class Solution {
    public static int count(int[] arr, int n, int x) {
        // code here
        int first=0,last=0;
        
        first = firstOccurence(arr,x,0,n-1);
        if(first==-1)
            return 0;
        last  = lastOccurence(arr,x,0,n-1);
        
        return last-first+1;
        
    }
    
  public static int firstOccurence(int arr[],int x,int low,int high)
    {
        int mid = 0,first=-1;
        while(low<=high)
        {
            mid = (low+high)/2;
            if(arr[mid]==x)
            {
                first = mid;
                high = mid-1;
            }
            else if(arr[mid]<x)
            {
                low = mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        
        return first;
  }
    
    public static int lastOccurence(int arr[],int x,int low,int high)
    {
        int mid = 0,last=-1;
        while(low<=high)
        {
            mid = (low+high)/2;
            if(arr[mid]==x)
            {
                last = mid;
                low = mid+1;
            }
            else if(arr[mid]<x)
            {
                low = mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        
        return last;
    }
}


T.C. -> O(logN)
S.C. -> O(1)

