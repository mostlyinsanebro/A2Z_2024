Problem Link:-
https://leetcode.com/problems/sum-of-beauty-of-all-substrings/description/


My Solution(Partially accepted):-
class Solution {
    public int beautySum(String s) {
        int ans=0;
        char ch=' ';
        int max=Integer.MIN_VALUE;
        int min=Integer.MAX_VALUE;
        HashMap<Character,Integer> map=new HashMap<>();

        for(int i=0;i<s.length()-1;i++)
        {
            for(int j=i+1;j<s.length();j++)
            {
                map.clear();
                max=Integer.MIN_VALUE;
                min=Integer.MAX_VALUE;
                for(int k=i;k<=j;k++)
                {
                    ch = s.charAt(k);
                    
                    map.put(ch,map.getOrDefault(ch,0)+1);

                    max = Math.max(max,map.get(ch));
                    min = Math.min(min,map.get(ch));

                    //System.out.println(s.substring(i,j+1)+" "+(max-min));
                }
                if(max!=Integer.MIN_VALUE&&min!=Integer.MAX_VALUE&&map.size()>1)
                {
                    ans+=max-min;
                    if(max-min==1)
                    System.out.println(s.substring(i,j+1)+" "+(max-min));
                }
                
               
            }
        }
        return ans;
    }
}


T.C. -> O(N^3)
S.C. -> O(1)

Solution:-
class Solution {
    public int minCount(int arr[])
    {
        int min = Integer.MAX_VALUE;

        for(int i=0;i<26;i++)
        {
            if(arr[i]!=0)
            {
                min=Math.min(min,arr[i]);
            }
        }
        return min;
    }
    
    public int maxCount(int arr[])
    {
        int max = Integer.MIN_VALUE;

        for(int i=0;i<26;i++)
        {
            max=Math.max(max,arr[i]);
        }
        return max;
    }
    public int beautySum(String s) {
        int max=Integer.MIN_VALUE;
        int min=Integer.MAX_VALUE;

        int beauty=0;
        char ch=' ';

        for(int i=0;i<s.length();i++)
        {
            int freq[] = new int[26];
            for(int j=i;j<s.length();j++)
            {
                ch = s.charAt(j);
                freq[ch-'a']++;

                beauty+= (maxCount(freq)-minCount(freq));
            }
        }
        return beauty;
    }
}

T.C. -> O(n^2)
S.C. -> O(26)
